{"ast":null,"code":"const API_URL = 'http://www.imaketheblogs.com/graphql';\n\nasync function fetchAPI(query, {\n  variables\n} = {}) {\n  const headers = {\n    'Content-Type': 'application/json'\n  };\n  const res = await fetch(API_URL, {\n    method: 'POST',\n    headers,\n    body: JSON.stringify({\n      query,\n      variables\n    })\n  });\n  const json = await res.json();\n\n  if (json.errors) {\n    console.log(json.errors);\n    console.log('error details', query, variables);\n    throw new Error('Failed to fetch API');\n  }\n\n  return json.data;\n}\n\nexport async function getAllPosts(preview) {\n  const data = await fetchAPI(`\n    query MyQuery {\n      posts(first: 20, where: {orderby: {field: DATE, order: DESC}}) {\n        edges {\n          node {\n            id\n            date\n            title\n            slug\n            extraPostInfo {\n              authorExcerpt\n              thumbImage {\n                mediaItemUrl\n              }\n            }\n          }\n        }\n      }\n    }  \n\n      `);\n  return data === null || data === void 0 ? void 0 : data.posts;\n}\nexport async function getAllPostsWithSlug() {\n  const data = await fetchAPI(`\n      {\n        posts(first: 10000) {\n          edges {\n            node {\n              slug\n            }\n          }\n        }\n      }\n    `);\n  return data === null || data === void 0 ? void 0 : data.posts;\n}\nexport async function getPost(slug) {\n  const data = await fetchAPI(`\n      fragment PostFields on Post {\n        title\n        excerpt\n        slug\n        date\n        featuredImage {\n          node {\n            id\n            sourceUrl\n          }\n        }\n      }\n      query PostBySlug($id: ID!, $idType: PostIdType!) {\n        post(id: $id, idType: $idType) {\n          ...PostFields\n          content\n        }\n      }\n    `, {\n    variables: {\n      id: slug,\n      idType: 'SLUG'\n    }\n  });\n  return data;\n}","map":null,"metadata":{},"sourceType":"module"}