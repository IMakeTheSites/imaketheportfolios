{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar API_URL = process.env.WP_API_URL;\n\nfunction fetchAPI(_x) {\n  return _fetchAPI.apply(this, arguments);\n}\n\nfunction _fetchAPI() {\n  _fetchAPI = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(query) {\n    var _ref,\n        variables,\n        headers,\n        res,\n        json,\n        _args = arguments;\n\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _ref = _args.length > 1 && _args[1] !== undefined ? _args[1] : {}, variables = _ref.variables;\n            headers = {\n              'Content-Type': 'application/json'\n            };\n            _context.next = 4;\n            return fetch(API_URL, {\n              method: 'POST',\n              headers: headers,\n              body: JSON.stringify({\n                query: query,\n                variables: variables\n              })\n            });\n\n          case 4:\n            res = _context.sent;\n            _context.next = 7;\n            return res.json();\n\n          case 7:\n            json = _context.sent;\n\n            if (!json.errors) {\n              _context.next = 12;\n              break;\n            }\n\n            console.log(json.errors);\n            console.log('error details', query, variables);\n            throw new Error('Failed to fetch API');\n\n          case 12:\n            return _context.abrupt(\"return\", json.data);\n\n          case 13:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _fetchAPI.apply(this, arguments);\n}\n\nexport function getAllPosts(_x2) {\n  return _getAllPosts.apply(this, arguments);\n}\n\nfunction _getAllPosts() {\n  _getAllPosts = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(preview) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return fetchAPI(\"\\n    query MyQuery {\\n      posts(first: 20, where: {orderby: {field: DATE, order: DESC}}) {\\n        edges {\\n          node {\\n            id\\n            date\\n            title\\n            slug\\n            extraPostInfo {\\n              authorExcerpt\\n              thumbImage {\\n                mediaItemUrl\\n              }\\n            }\\n          }\\n        }\\n      }\\n    }  \\n\\n      \");\n\n          case 2:\n            data = _context2.sent;\n            return _context2.abrupt(\"return\", data === null || data === void 0 ? void 0 : data.posts);\n\n          case 4:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _getAllPosts.apply(this, arguments);\n}\n\nexport function getAllPostsWithSlug() {\n  return _getAllPostsWithSlug.apply(this, arguments);\n}\n\nfunction _getAllPostsWithSlug() {\n  _getAllPostsWithSlug = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return fetchAPI(\"\\n      {\\n        posts(first: 10000) {\\n          edges {\\n            node {\\n              slug\\n            }\\n          }\\n        }\\n      }\\n    \");\n\n          case 2:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data === null || data === void 0 ? void 0 : data.posts);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n  return _getAllPostsWithSlug.apply(this, arguments);\n}\n\nexport function getPost(_x3) {\n  return _getPost.apply(this, arguments);\n}\n\nfunction _getPost() {\n  _getPost = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(slug) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return fetchAPI(\"\\n      fragment PostFields on Post {\\n        title\\n        excerpt\\n        slug\\n        date\\n        featuredImage {\\n          node {\\n            sourceUrl\\n          }\\n        }\\n      }\\n      query PostBySlug($id: ID!, $idType: PostIdType!) {\\n        post(id: $id, idType: $idType) {\\n          ...PostFields\\n          content\\n        }\\n      }\\n    \", {\n              variables: {\n                id: slug,\n                idType: 'SLUG'\n              }\n            });\n\n          case 2:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n  return _getPost.apply(this, arguments);\n}","map":null,"metadata":{},"sourceType":"module"}